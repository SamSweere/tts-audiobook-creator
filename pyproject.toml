[tool.poetry]
name = "tts-audiobook-creator"
version = "0.1.0"
description = "Convert books to audiobooks Convert books to audiobooks using AI based text to speech (TTS). "
authors = ["Sam Sweere <samsweere@gmail.com>"]
readme = "README.md"
packages = [{include = "tts_audiobook_creator"}]

[tool.poetry.dependencies]
python = ">=3.11, <3.12"
torch = "^2.2.0"
ebooklib = "^0.18"
beautifulsoup4 = "^4.12.3"
tts = "^0.22.0"
nltk = "^3.8.1"
tqdm = "^4.66.2"
gradio = "^4.26.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-cov = "^4.1.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.2"
ruff = "^0.3.2"
mypy = "^1.9.0"
ipykernel = "^6.29.4"
ipywidgets = "^8.1.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Ruff is flake8 + isort + other tools implemented in Rust
include = ['*.py', '*.ipynb', 'pyproject.toml']

# The fix value enables or disables auto fixing
fix = false

line-length = 120

target-version = 'py311'

[tool.ruff.lint]
ignore = [
    'D100', # Missing docstring in public module
    'D104' , # Missing docstring in public package
    'PD901', # `df` is a bad variable name. Be kinder to your future self.
    ]

select = [
    'E',    # pycodestyle
    'W',    # pycodestyle
    'F',    # pyflakes
    'I',    # isort
    'B',    # flake8-bugbear
    'C4',   # flake8-comprehensions
    'UP',   # pyupgrade
    'PD',   # pandas-vet
    'SIM',  # flake8-simplify
    # 'D',    # pydocstyle
]

[tool.ruff.lint.per-file-ignores]
'notebooks/*' = [

    'E501', # Line too long, most of the time not a problem in a notebook
    'B018', # Found useless expression. Either assign it to a variable or remove it. Often used in notebooks for debugging
    'E402', # Module level import not at top of file, this is usually not the case in a notebook
]

[tool.ruff.lint.pydocstyle]
convention = 'google'

[tool.mypy]
python_version = '3.11'
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
disable_error_code = [
    'attr-defined'
]
exclude = [
    '^tests/.*',
    '^notebooks/.*',
]
